//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9154")]
	public enum ServiceAppointmentState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Closed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 3,
	}
	
	/// <summary>
	/// Activity offered by the organization to satisfy its customer's needs. Each service activity includes date, time, duration, and required resources.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("serviceappointment")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9154")]
	public partial class ServiceAppointment : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityAdditionalParams = "activityadditionalparams";
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Bcc = "bcc";
			public const string Category = "category";
			public const string Cc = "cc";
			public const string Community = "community";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Customers = "customers";
			public const string DeliveryLastAttemptedOn = "deliverylastattemptedon";
			public const string DeliveryPriorityCode = "deliveryprioritycode";
			public const string Description = "description";
			public const string ExchangeItemId = "exchangeitemid";
			public const string ExchangeRate = "exchangerate";
			public const string ExchangeWebLink = "exchangeweblink";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string IsAllDayEvent = "isalldayevent";
			public const string IsBilled = "isbilled";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string LeftVoiceMail = "leftvoicemail";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OnHoldTime = "onholdtime";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Partners = "partners";
			public const string PostponeActivityProcessingUntil = "postponeactivityprocessinguntil";
			public const string PriorityCode = "prioritycode";
			public const string ProcessId = "processid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SenderMailboxId = "sendermailboxid";
			public const string SentOn = "senton";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string SiteId = "siteid";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string To = "to";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Account_ServiceAppointments = "Account_ServiceAppointments";
			public const string activity_pointer_service_appointment = "activity_pointer_service_appointment";
			public const string bookableresourcebooking_ServiceAppointments = "bookableresourcebooking_ServiceAppointments";
			public const string bookableresourcebookingheader_ServiceAppointments = "bookableresourcebookingheader_ServiceAppointments";
			public const string bulkoperation_ServiceAppointments = "bulkoperation_ServiceAppointments";
			public const string business_unit_service_appointments = "business_unit_service_appointments";
			public const string Campaign_ServiceAppointments = "Campaign_ServiceAppointments";
			public const string campaignactivity_ServiceAppointments = "campaignactivity_ServiceAppointments";
			public const string Contact_ServiceAppointments = "Contact_ServiceAppointments";
			public const string Contract_ServiceAppointments = "Contract_ServiceAppointments";
			public const string entitlement_ServiceAppointments = "entitlement_ServiceAppointments";
			public const string entitlementtemplate_ServiceAppointments = "entitlementtemplate_ServiceAppointments";
			public const string Incident_ServiceAppointments = "Incident_ServiceAppointments";
			public const string interactionforemail_ServiceAppointments = "interactionforemail_ServiceAppointments";
			public const string Invoice_ServiceAppointments = "Invoice_ServiceAppointments";
			public const string KnowledgeArticle_ServiceAppointments = "KnowledgeArticle_ServiceAppointments";
			public const string KnowledgeBaseRecord_ServiceAppointments = "KnowledgeBaseRecord_ServiceAppointments";
			public const string Lead_ServiceAppointments = "Lead_ServiceAppointments";
			public const string lk_serviceappointment_createdby = "lk_serviceappointment_createdby";
			public const string lk_serviceappointment_createdonbehalfby = "lk_serviceappointment_createdonbehalfby";
			public const string lk_serviceappointment_modifiedby = "lk_serviceappointment_modifiedby";
			public const string lk_serviceappointment_modifiedonbehalfby = "lk_serviceappointment_modifiedonbehalfby";
			public const string manualsla_serviceappointment = "manualsla_serviceappointment";
			public const string msdyn_postalbum_ServiceAppointments = "msdyn_postalbum_ServiceAppointments";
			public const string Opportunity_ServiceAppointments = "Opportunity_ServiceAppointments";
			public const string Quote_ServiceAppointments = "Quote_ServiceAppointments";
			public const string SalesOrder_ServiceAppointments = "SalesOrder_ServiceAppointments";
			public const string service_service_appointments = "service_service_appointments";
			public const string serviceappointment_mailbox_sendermailboxid = "serviceappointment_mailbox_sendermailboxid";
			public const string site_service_appointments = "site_service_appointments";
			public const string site_ServiceAppointments = "site_ServiceAppointments";
			public const string sla_serviceappointment = "sla_serviceappointment";
			public const string system_user_service_appointments = "system_user_service_appointments";
			public const string team_service_appointments = "team_service_appointments";
			public const string TransactionCurrency_ServiceAppointment = "TransactionCurrency_ServiceAppointment";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ServiceAppointment() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "serviceappointment";
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public const int EntityTypeCode = 4214;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
		public string ActivityAdditionalParams
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("activityadditionalparams");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActivityAdditionalParams");
				this.SetAttributeValue("activityadditionalparams", value);
				this.OnPropertyChanged("ActivityAdditionalParams");
			}
		}
		
		/// <summary>
		/// Unique identifier of the service activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActivityId");
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ActivityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Shows the type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		/// <summary>
		/// Shows the value selected in the Duration field on the service activity at the time the service activity is closed as completed. The duration is used to report the time spent on the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> ActualDurationMinutes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActualDurationMinutes");
				this.SetAttributeValue("actualdurationminutes", value);
				this.OnPropertyChanged("ActualDurationMinutes");
			}
		}
		
		/// <summary>
		/// Enter the actual end date and time of the service activity. By default, it displays when the activity was closed or canceled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> ActualEnd
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActualEnd");
				this.SetAttributeValue("actualend", value);
				this.OnPropertyChanged("ActualEnd");
			}
		}
		
		/// <summary>
		/// Enter the actual start date and time for the service activity. By default, it displays when the activity was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> ActualStart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActualStart");
				this.SetAttributeValue("actualstart", value);
				this.OnPropertyChanged("ActualStart");
			}
		}
		
		/// <summary>
		/// Blind Carbon-copy (bcc) recipients of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> Bcc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Bcc");
				if ((value == null))
				{
					this.SetAttributeValue("bcc", value);
				}
				else
				{
					this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Bcc");
			}
		}
		
		/// <summary>
		/// Type a category to identify the service activity type, such as routine maintenance or service call, to tie the service activity to a business group or function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Category");
				this.SetAttributeValue("category", value);
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// Carbon-copy (cc) recipients of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> Cc
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Cc");
				if ((value == null))
				{
					this.SetAttributeValue("cc", value);
				}
				else
				{
					this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Cc");
			}
		}
		
		/// <summary>
		/// Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("community")]
		public Microsoft.Xrm.Sdk.OptionSetValue Community
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("community");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Community");
				this.SetAttributeValue("community", value);
				this.OnPropertyChanged("Community");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the activity was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the activitypointer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Enter the accounts and contacts for whom the service activity is being performed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customers")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> Customers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("customers");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Customers");
				if ((value == null))
				{
					this.SetAttributeValue("customers", value);
				}
				else
				{
					this.SetAttributeValue("customers", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Customers");
			}
		}
		
		/// <summary>
		/// Date and time when the delivery of the activity was last attempted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliverylastattemptedon")]
		public System.Nullable<System.DateTime> DeliveryLastAttemptedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("deliverylastattemptedon");
			}
		}
		
		/// <summary>
		/// Priority of delivery of the activity to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue DeliveryPriorityCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("deliveryprioritycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DeliveryPriorityCode");
				this.SetAttributeValue("deliveryprioritycode", value);
				this.OnPropertyChanged("DeliveryPriorityCode");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the service activity, such as key talking points or objectives.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// The message id of activity which is returned from Exchange Server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeitemid")]
		public string ExchangeItemId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("exchangeitemid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExchangeItemId");
				this.SetAttributeValue("exchangeitemid", value);
				this.OnPropertyChanged("ExchangeItemId");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Shows the web link of Activity of type email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeweblink")]
		public string ExchangeWebLink
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("exchangeweblink");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExchangeWebLink");
				this.SetAttributeValue("exchangeweblink", value);
				this.OnPropertyChanged("ExchangeWebLink");
			}
		}
		
		/// <summary>
		/// Person who the activity is from.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> From
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("From");
				if ((value == null))
				{
					this.SetAttributeValue("from", value);
				}
				else
				{
					this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("From");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Type of instance of a recurring series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue InstanceTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instancetypecode");
			}
		}
		
		/// <summary>
		/// Select whether the service activity is an all-day event to make sure the required resources are scheduled for the full day.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isalldayevent")]
		public System.Nullable<bool> IsAllDayEvent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isalldayevent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAllDayEvent");
				this.SetAttributeValue("isalldayevent", value);
				this.OnPropertyChanged("IsAllDayEvent");
			}
		}
		
		/// <summary>
		/// Information which specifies whether the service activity was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsBilled");
				this.SetAttributeValue("isbilled", value);
				this.OnPropertyChanged("IsBilled");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
		public System.Nullable<bool> IsMapiPrivate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMapiPrivate");
				this.SetAttributeValue("ismapiprivate", value);
				this.OnPropertyChanged("IsMapiPrivate");
			}
		}
		
		/// <summary>
		/// Information regarding whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		/// <summary>
		/// Information which specifies if the service activity was created from a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsWorkflowCreated");
				this.SetAttributeValue("isworkflowcreated", value);
				this.OnPropertyChanged("IsWorkflowCreated");
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LastOnHoldTime");
				this.SetAttributeValue("lastonholdtime", value);
				this.OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Left the voice mail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leftvoicemail")]
		public System.Nullable<bool> LeftVoiceMail
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("leftvoicemail");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LeftVoiceMail");
				this.SetAttributeValue("leftvoicemail", value);
				this.OnPropertyChanged("LeftVoiceMail");
			}
		}
		
		/// <summary>
		/// Type the location where the service activity will take place, such as a conference room, customer office, or other venue.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("location")]
		public string Location
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("location");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Location");
				this.SetAttributeValue("location", value);
				this.OnPropertyChanged("Location");
			}
		}
		
		/// <summary>
		/// Unique identifier of user who last modified the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when activity was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the activitypointer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// List of optional attendees for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> OptionalAttendees
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OptionalAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("optionalattendees", value);
				}
				else
				{
					this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("OptionalAttendees");
			}
		}
		
		/// <summary>
		/// Person who organized the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> Organizer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Organizer");
				if ((value == null))
				{
					this.SetAttributeValue("organizer", value);
				}
				else
				{
					this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Organizer");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Outsource vendor with which activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partners")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> Partners
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("partners");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Partners");
				if ((value == null))
				{
					this.SetAttributeValue("partners", value);
				}
				else
				{
					this.SetAttributeValue("partners", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Partners");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeactivityprocessinguntil")]
		public System.Nullable<System.DateTime> PostponeActivityProcessingUntil
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeactivityprocessinguntil");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Choose the record that the service activity relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// List of required attendees for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> RequiredAttendees
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RequiredAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("requiredattendees", value);
				}
				else
				{
					this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("RequiredAttendees");
			}
		}
		
		/// <summary>
		/// Enter the user, facility, or equipment required to complete the service activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resources")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> Resources
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("resources");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Resources");
				if ((value == null))
				{
					this.SetAttributeValue("resources", value);
				}
				else
				{
					this.SetAttributeValue("resources", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Resources");
			}
		}
		
		/// <summary>
		/// Shows the expected duration of the service activity, in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> ScheduledDurationMinutes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ScheduledDurationMinutes");
				this.SetAttributeValue("scheduleddurationminutes", value);
				this.OnPropertyChanged("ScheduledDurationMinutes");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ScheduledEnd");
				this.SetAttributeValue("scheduledend", value);
				this.OnPropertyChanged("ScheduledEnd");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ScheduledStart");
				this.SetAttributeValue("scheduledstart", value);
				this.OnPropertyChanged("ScheduledStart");
			}
		}
		
		/// <summary>
		/// Unique identifier of the mailbox associated with the sender of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
		public Microsoft.Xrm.Sdk.EntityReference SenderMailboxId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendermailboxid");
			}
		}
		
		/// <summary>
		/// Date and time when the activity was sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("senton")]
		public System.Nullable<System.DateTime> SentOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("senton");
			}
		}
		
		/// <summary>
		/// Uniqueidentifier specifying the id of recurring series of an instance.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesid")]
		public System.Nullable<System.Guid> SeriesId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("seriesid");
			}
		}
		
		/// <summary>
		/// Choose the service scheduled to be performed during the service activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceId");
				this.SetAttributeValue("serviceid", value);
				this.OnPropertyChanged("ServiceId");
			}
		}
		
		/// <summary>
		/// Choose the site or location where the service activity will be performed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("siteid")]
		public Microsoft.Xrm.Sdk.EntityReference SiteId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("siteid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SiteId");
				this.SetAttributeValue("siteid", value);
				this.OnPropertyChanged("SiteId");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the service appointment record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SLAId");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this email. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SortDate");
				this.SetAttributeValue("sortdate", value);
				this.OnPropertyChanged("SortDate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Shows whether the service activity is open, completed, or canceled. Completed and canceled service activities are read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Common.Entities.ServiceAppointmentState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Common.Entities.ServiceAppointmentState)(System.Enum.ToObject(typeof(Common.Entities.ServiceAppointmentState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the service activity's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Type a subcategory to identify the service activity type and relate the activity to a specific product, service region, business group, or other function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Subcategory");
				this.SetAttributeValue("subcategory", value);
				this.OnPropertyChanged("Subcategory");
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the service activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Subject");
				this.SetAttributeValue("subject", value);
				this.OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> SubscriptionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SubscriptionId");
				this.SetAttributeValue("subscriptionid", value);
				this.OnPropertyChanged("SubscriptionId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Person who is the receiver of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> To
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Common.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("To");
				if ((value == null))
				{
					this.SetAttributeValue("to", value);
				}
				else
				{
					this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("To");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N CampaignResponse_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignResponse_ServiceAppointments")]
		public System.Collections.Generic.IEnumerable<Common.Entities.CampaignResponse> CampaignResponse_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.CampaignResponse>("CampaignResponse_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CampaignResponse_ServiceAppointments");
				this.SetRelatedEntities<Common.Entities.CampaignResponse>("CampaignResponse_ServiceAppointments", null, value);
				this.OnPropertyChanged("CampaignResponse_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// 1:N serviceappointment_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_actioncard")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActionCard> serviceappointment_actioncard
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.ActionCard>("serviceappointment_actioncard", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("serviceappointment_actioncard");
				this.SetRelatedEntities<Common.Entities.ActionCard>("serviceappointment_actioncard", null, value);
				this.OnPropertyChanged("serviceappointment_actioncard");
			}
		}
		
		/// <summary>
		/// 1:N serviceappointment_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_activity_parties")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ActivityParty> serviceappointment_activity_parties
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.ActivityParty>("serviceappointment_activity_parties", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("serviceappointment_activity_parties");
				this.SetRelatedEntities<Common.Entities.ActivityParty>("serviceappointment_activity_parties", null, value);
				this.OnPropertyChanged("serviceappointment_activity_parties");
			}
		}
		
		/// <summary>
		/// 1:N ServiceAppointment_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ServiceAppointment_Annotation")]
		public System.Collections.Generic.IEnumerable<Common.Entities.Annotation> ServiceAppointment_Annotation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.Annotation>("ServiceAppointment_Annotation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceAppointment_Annotation");
				this.SetRelatedEntities<Common.Entities.Annotation>("ServiceAppointment_Annotation", null, value);
				this.OnPropertyChanged("ServiceAppointment_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N ServiceAppointment_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ServiceAppointment_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Common.Entities.AsyncOperation> ServiceAppointment_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.AsyncOperation>("ServiceAppointment_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceAppointment_AsyncOperations");
				this.SetRelatedEntities<Common.Entities.AsyncOperation>("ServiceAppointment_AsyncOperations", null, value);
				this.OnPropertyChanged("ServiceAppointment_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N ServiceAppointment_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ServiceAppointment_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Common.Entities.BulkDeleteFailure> ServiceAppointment_BulkDeleteFailures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.BulkDeleteFailure>("ServiceAppointment_BulkDeleteFailures", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceAppointment_BulkDeleteFailures");
				this.SetRelatedEntities<Common.Entities.BulkDeleteFailure>("ServiceAppointment_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("ServiceAppointment_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N serviceappointment_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_connections1")]
		public System.Collections.Generic.IEnumerable<Common.Entities.Connection> serviceappointment_connections1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.Connection>("serviceappointment_connections1", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("serviceappointment_connections1");
				this.SetRelatedEntities<Common.Entities.Connection>("serviceappointment_connections1", null, value);
				this.OnPropertyChanged("serviceappointment_connections1");
			}
		}
		
		/// <summary>
		/// 1:N serviceappointment_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_connections2")]
		public System.Collections.Generic.IEnumerable<Common.Entities.Connection> serviceappointment_connections2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.Connection>("serviceappointment_connections2", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("serviceappointment_connections2");
				this.SetRelatedEntities<Common.Entities.Connection>("serviceappointment_connections2", null, value);
				this.OnPropertyChanged("serviceappointment_connections2");
			}
		}
		
		/// <summary>
		/// 1:N serviceappointment_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Common.Entities.MailboxTrackingFolder> serviceappointment_MailboxTrackingFolders
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.MailboxTrackingFolder>("serviceappointment_MailboxTrackingFolders", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("serviceappointment_MailboxTrackingFolders");
				this.SetRelatedEntities<Common.Entities.MailboxTrackingFolder>("serviceappointment_MailboxTrackingFolders", null, value);
				this.OnPropertyChanged("serviceappointment_MailboxTrackingFolders");
			}
		}
		
		/// <summary>
		/// 1:N serviceappointment_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Common.Entities.PrincipalObjectAttributeAccess> serviceappointment_principalobjectattributeaccess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.PrincipalObjectAttributeAccess>("serviceappointment_principalobjectattributeaccess", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("serviceappointment_principalobjectattributeaccess");
				this.SetRelatedEntities<Common.Entities.PrincipalObjectAttributeAccess>("serviceappointment_principalobjectattributeaccess", null, value);
				this.OnPropertyChanged("serviceappointment_principalobjectattributeaccess");
			}
		}
		
		/// <summary>
		/// 1:N ServiceAppointment_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ServiceAppointment_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Common.Entities.ProcessSession> ServiceAppointment_ProcessSessions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.ProcessSession>("ServiceAppointment_ProcessSessions", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceAppointment_ProcessSessions");
				this.SetRelatedEntities<Common.Entities.ProcessSession>("ServiceAppointment_ProcessSessions", null, value);
				this.OnPropertyChanged("ServiceAppointment_ProcessSessions");
			}
		}
		
		/// <summary>
		/// 1:N ServiceAppointment_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ServiceAppointment_QueueItem")]
		public System.Collections.Generic.IEnumerable<Common.Entities.QueueItem> ServiceAppointment_QueueItem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.QueueItem>("ServiceAppointment_QueueItem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceAppointment_QueueItem");
				this.SetRelatedEntities<Common.Entities.QueueItem>("ServiceAppointment_QueueItem", null, value);
				this.OnPropertyChanged("ServiceAppointment_QueueItem");
			}
		}
		
		/// <summary>
		/// 1:N ServiceAppointment_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ServiceAppointment_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Common.Entities.SyncError> ServiceAppointment_SyncErrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.SyncError>("ServiceAppointment_SyncErrors", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceAppointment_SyncErrors");
				this.SetRelatedEntities<Common.Entities.SyncError>("ServiceAppointment_SyncErrors", null, value);
				this.OnPropertyChanged("ServiceAppointment_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N slakpiinstance_serviceappointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slakpiinstance_serviceappointment")]
		public System.Collections.Generic.IEnumerable<Common.Entities.SLAKPIInstance> slakpiinstance_serviceappointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.SLAKPIInstance>("slakpiinstance_serviceappointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("slakpiinstance_serviceappointment");
				this.SetRelatedEntities<Common.Entities.SLAKPIInstance>("slakpiinstance_serviceappointment", null, value);
				this.OnPropertyChanged("slakpiinstance_serviceappointment");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_serviceappointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_serviceappointment")]
		public System.Collections.Generic.IEnumerable<Common.Entities.UserEntityInstanceData> userentityinstancedata_serviceappointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Common.Entities.UserEntityInstanceData>("userentityinstancedata_serviceappointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("userentityinstancedata_serviceappointment");
				this.SetRelatedEntities<Common.Entities.UserEntityInstanceData>("userentityinstancedata_serviceappointment", null, value);
				this.OnPropertyChanged("userentityinstancedata_serviceappointment");
			}
		}
		
		/// <summary>
		/// N:1 Account_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_ServiceAppointments")]
		public Common.Entities.Account Account_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Account>("Account_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Account_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Account>("Account_ServiceAppointments", null, value);
				this.OnPropertyChanged("Account_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_service_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_service_appointment")]
		public Common.Entities.ActivityPointer activity_pointer_service_appointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.ActivityPointer>("activity_pointer_service_appointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("activity_pointer_service_appointment");
				this.SetRelatedEntity<Common.Entities.ActivityPointer>("activity_pointer_service_appointment", null, value);
				this.OnPropertyChanged("activity_pointer_service_appointment");
			}
		}
		
		/// <summary>
		/// N:1 bookableresourcebooking_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebooking_ServiceAppointments")]
		public Common.Entities.BookableResourceBooking bookableresourcebooking_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.BookableResourceBooking>("bookableresourcebooking_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("bookableresourcebooking_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.BookableResourceBooking>("bookableresourcebooking_ServiceAppointments", null, value);
				this.OnPropertyChanged("bookableresourcebooking_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 bookableresourcebookingheader_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebookingheader_ServiceAppointments")]
		public Common.Entities.BookableResourceBookingHeader bookableresourcebookingheader_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.BookableResourceBookingHeader>("bookableresourcebookingheader_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("bookableresourcebookingheader_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.BookableResourceBookingHeader>("bookableresourcebookingheader_ServiceAppointments", null, value);
				this.OnPropertyChanged("bookableresourcebookingheader_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 bulkoperation_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_ServiceAppointments")]
		public Common.Entities.BulkOperation bulkoperation_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.BulkOperation>("bulkoperation_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("bulkoperation_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.BulkOperation>("bulkoperation_ServiceAppointments", null, value);
				this.OnPropertyChanged("bulkoperation_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_service_appointments")]
		public Common.Entities.BusinessUnit business_unit_service_appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.BusinessUnit>("business_unit_service_appointments", null);
			}
		}
		
		/// <summary>
		/// N:1 Campaign_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Campaign_ServiceAppointments")]
		public Common.Entities.Campaign Campaign_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Campaign>("Campaign_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Campaign_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Campaign>("Campaign_ServiceAppointments", null, value);
				this.OnPropertyChanged("Campaign_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 campaignactivity_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_ServiceAppointments")]
		public Common.Entities.CampaignActivity campaignactivity_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.CampaignActivity>("campaignactivity_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("campaignactivity_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.CampaignActivity>("campaignactivity_ServiceAppointments", null, value);
				this.OnPropertyChanged("campaignactivity_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 Contact_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_ServiceAppointments")]
		public Common.Entities.Contact Contact_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Contact>("Contact_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Contact_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Contact>("Contact_ServiceAppointments", null, value);
				this.OnPropertyChanged("Contact_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 Contract_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_ServiceAppointments")]
		public Common.Entities.Contract Contract_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Contract>("Contract_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Contract_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Contract>("Contract_ServiceAppointments", null, value);
				this.OnPropertyChanged("Contract_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 entitlement_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_ServiceAppointments")]
		public Common.Entities.Entitlement entitlement_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Entitlement>("entitlement_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Entitlement>("entitlement_ServiceAppointments", null, value);
				this.OnPropertyChanged("entitlement_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 entitlementtemplate_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementtemplate_ServiceAppointments")]
		public Common.Entities.EntitlementTemplate entitlementtemplate_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.EntitlementTemplate>("entitlementtemplate_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlementtemplate_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.EntitlementTemplate>("entitlementtemplate_ServiceAppointments", null, value);
				this.OnPropertyChanged("entitlementtemplate_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 Incident_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_ServiceAppointments")]
		public Common.Entities.Incident Incident_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Incident>("Incident_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Incident_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Incident>("Incident_ServiceAppointments", null, value);
				this.OnPropertyChanged("Incident_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 interactionforemail_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("interactionforemail_ServiceAppointments")]
		public Common.Entities.InteractionForEmail interactionforemail_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.InteractionForEmail>("interactionforemail_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("interactionforemail_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.InteractionForEmail>("interactionforemail_ServiceAppointments", null, value);
				this.OnPropertyChanged("interactionforemail_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 Invoice_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Invoice_ServiceAppointments")]
		public Common.Entities.Invoice Invoice_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Invoice>("Invoice_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Invoice_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Invoice>("Invoice_ServiceAppointments", null, value);
				this.OnPropertyChanged("Invoice_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeArticle_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeArticle_ServiceAppointments")]
		public Common.Entities.KnowledgeArticle KnowledgeArticle_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.KnowledgeArticle>("KnowledgeArticle_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("KnowledgeArticle_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.KnowledgeArticle>("KnowledgeArticle_ServiceAppointments", null, value);
				this.OnPropertyChanged("KnowledgeArticle_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeBaseRecord_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_ServiceAppointments")]
		public Common.Entities.KnowledgeBaseRecord KnowledgeBaseRecord_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.KnowledgeBaseRecord>("KnowledgeBaseRecord_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("KnowledgeBaseRecord_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.KnowledgeBaseRecord>("KnowledgeBaseRecord_ServiceAppointments", null, value);
				this.OnPropertyChanged("KnowledgeBaseRecord_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 Lead_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_ServiceAppointments")]
		public Common.Entities.Lead Lead_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Lead>("Lead_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Lead_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Lead>("Lead_ServiceAppointments", null, value);
				this.OnPropertyChanged("Lead_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 lk_serviceappointment_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_serviceappointment_createdby")]
		public Common.Entities.SystemUser lk_serviceappointment_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SystemUser>("lk_serviceappointment_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_serviceappointment_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_serviceappointment_createdonbehalfby")]
		public Common.Entities.SystemUser lk_serviceappointment_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SystemUser>("lk_serviceappointment_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_serviceappointment_createdonbehalfby");
				this.SetRelatedEntity<Common.Entities.SystemUser>("lk_serviceappointment_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_serviceappointment_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_serviceappointment_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_serviceappointment_modifiedby")]
		public Common.Entities.SystemUser lk_serviceappointment_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SystemUser>("lk_serviceappointment_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_serviceappointment_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_serviceappointment_modifiedonbehalfby")]
		public Common.Entities.SystemUser lk_serviceappointment_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SystemUser>("lk_serviceappointment_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_serviceappointment_modifiedonbehalfby");
				this.SetRelatedEntity<Common.Entities.SystemUser>("lk_serviceappointment_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_serviceappointment_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 manualsla_serviceappointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("manualsla_serviceappointment")]
		public Common.Entities.SLA manualsla_serviceappointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SLA>("manualsla_serviceappointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("manualsla_serviceappointment");
				this.SetRelatedEntity<Common.Entities.SLA>("manualsla_serviceappointment", null, value);
				this.OnPropertyChanged("manualsla_serviceappointment");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_postalbum_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_postalbum_ServiceAppointments")]
		public Common.Entities.msdyn_PostAlbum msdyn_postalbum_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.msdyn_PostAlbum>("msdyn_postalbum_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_postalbum_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.msdyn_PostAlbum>("msdyn_postalbum_ServiceAppointments", null, value);
				this.OnPropertyChanged("msdyn_postalbum_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 Opportunity_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_ServiceAppointments")]
		public Common.Entities.Opportunity Opportunity_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Opportunity>("Opportunity_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Opportunity_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Opportunity>("Opportunity_ServiceAppointments", null, value);
				this.OnPropertyChanged("Opportunity_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 Quote_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Quote_ServiceAppointments")]
		public Common.Entities.Quote Quote_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Quote>("Quote_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Quote_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Quote>("Quote_ServiceAppointments", null, value);
				this.OnPropertyChanged("Quote_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 SalesOrder_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SalesOrder_ServiceAppointments")]
		public Common.Entities.SalesOrder SalesOrder_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SalesOrder>("SalesOrder_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SalesOrder_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.SalesOrder>("SalesOrder_ServiceAppointments", null, value);
				this.OnPropertyChanged("SalesOrder_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 service_service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_service_appointments")]
		public Common.Entities.Service service_service_appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Service>("service_service_appointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("service_service_appointments");
				this.SetRelatedEntity<Common.Entities.Service>("service_service_appointments", null, value);
				this.OnPropertyChanged("service_service_appointments");
			}
		}
		
		/// <summary>
		/// N:1 serviceappointment_mailbox_sendermailboxid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_mailbox_sendermailboxid")]
		public Common.Entities.Mailbox serviceappointment_mailbox_sendermailboxid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Mailbox>("serviceappointment_mailbox_sendermailboxid", null);
			}
		}
		
		/// <summary>
		/// N:1 site_service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("siteid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("site_service_appointments")]
		public Common.Entities.Site site_service_appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Site>("site_service_appointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("site_service_appointments");
				this.SetRelatedEntity<Common.Entities.Site>("site_service_appointments", null, value);
				this.OnPropertyChanged("site_service_appointments");
			}
		}
		
		/// <summary>
		/// N:1 site_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("site_ServiceAppointments")]
		public Common.Entities.Site site_ServiceAppointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Site>("site_ServiceAppointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("site_ServiceAppointments");
				this.SetRelatedEntity<Common.Entities.Site>("site_ServiceAppointments", null, value);
				this.OnPropertyChanged("site_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// N:1 sla_serviceappointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("sla_serviceappointment")]
		public Common.Entities.SLA sla_serviceappointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SLA>("sla_serviceappointment", null);
			}
		}
		
		/// <summary>
		/// N:1 system_user_service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_service_appointments")]
		public Common.Entities.SystemUser system_user_service_appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.SystemUser>("system_user_service_appointments", null);
			}
		}
		
		/// <summary>
		/// N:1 team_service_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_service_appointments")]
		public Common.Entities.Team team_service_appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.Team>("team_service_appointments", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_ServiceAppointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ServiceAppointment")]
		public Common.Entities.TransactionCurrency TransactionCurrency_ServiceAppointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Common.Entities.TransactionCurrency>("TransactionCurrency_ServiceAppointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_ServiceAppointment");
				this.SetRelatedEntity<Common.Entities.TransactionCurrency>("TransactionCurrency_ServiceAppointment", null, value);
				this.OnPropertyChanged("TransactionCurrency_ServiceAppointment");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ServiceAppointment(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("community")]
		public virtual SocialProfile_Community? CommunityEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((SocialProfile_Community?)(EntityOptionSetEnum.GetEnum(this, "community")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				Community = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
		public virtual activitypointer_DeliveryPriorityCode? DeliveryPriorityCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((activitypointer_DeliveryPriorityCode?)(EntityOptionSetEnum.GetEnum(this, "deliveryprioritycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				DeliveryPriorityCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public virtual ServiceAppointment_InstanceTypeCode? InstanceTypeCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ServiceAppointment_InstanceTypeCode?)(EntityOptionSetEnum.GetEnum(this, "instancetypecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual ServiceAppointment_PriorityCode? PriorityCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ServiceAppointment_PriorityCode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				PriorityCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ServiceAppointment_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ServiceAppointment_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}